{"ast":null,"code":"var _jsxFileName = \"/home/luka/Desktop/quiz/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const questions = [{\n    text: \"What is the capital of America?\",\n    options: [{\n      id: 0,\n      text: \"New York City\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Boston\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"Santa Fe\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Washington DC\",\n      isCorrect: true\n    }]\n  }, {\n    text: \"What year was the Constitution of America written?\",\n    options: [{\n      id: 0,\n      text: \"1787\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"1776\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"1774\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"1826\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"Who was the second president of the US?\",\n    options: [{\n      id: 0,\n      text: \"John Adams\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"Paul Revere\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"Thomas Jefferson\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Benjamin Franklin\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"What is the largest state in the US?\",\n    options: [{\n      id: 0,\n      text: \"California\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Alaska\",\n      isCorrect: true\n    }, {\n      id: 2,\n      text: \"Texas\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Montana\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"Which of the following countries DO NOT border the US?\",\n    options: [{\n      id: 0,\n      text: \"Canada\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Russia\",\n      isCorrect: true\n    }, {\n      id: 2,\n      text: \"Cuba\",\n      isCorrect: true\n    }, {\n      id: 3,\n      text: \"Mexico\",\n      isCorrect: false\n    }]\n  }];\n  const optionClicked = isCorrect => {\n    console.log(isCorrect);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GEORGIA QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CURRENT SCORE : 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questioncard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"QUESTION \", currentQuestion + 1, \" OUT OF \", questions.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"questiontext\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(option.isCorrect),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finalresults\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FINAL RESULTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"1 out 5 correct-20%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"RESTART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5lA+bh+YResdRDZDtE+9l6Royy4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","showResults","setShowResults","currentQuestion","setCurrentQuestion","score","setScore","questions","text","options","id","isCorrect","optionClicked","console","log","length","map","option"],"sources":["/home/luka/Desktop/quiz/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const questions = [\n    {\n      text: \"What is the capital of America?\",\n      options: [\n        { id: 0, text: \"New York City\", isCorrect: false },\n        { id: 1, text: \"Boston\", isCorrect: false },\n        { id: 2, text: \"Santa Fe\", isCorrect: false },\n        { id: 3, text: \"Washington DC\", isCorrect: true },\n      ],\n    },\n    {\n      text: \"What year was the Constitution of America written?\",\n      options: [\n        { id: 0, text: \"1787\", isCorrect: true },\n        { id: 1, text: \"1776\", isCorrect: false },\n        { id: 2, text: \"1774\", isCorrect: false },\n        { id: 3, text: \"1826\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"Who was the second president of the US?\",\n      options: [\n        { id: 0, text: \"John Adams\", isCorrect: true },\n        { id: 1, text: \"Paul Revere\", isCorrect: false },\n        { id: 2, text: \"Thomas Jefferson\", isCorrect: false },\n        { id: 3, text: \"Benjamin Franklin\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"What is the largest state in the US?\",\n      options: [\n        { id: 0, text: \"California\", isCorrect: false },\n        { id: 1, text: \"Alaska\", isCorrect: true },\n        { id: 2, text: \"Texas\", isCorrect: false },\n        { id: 3, text: \"Montana\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"Which of the following countries DO NOT border the US?\",\n      options: [\n        { id: 0, text: \"Canada\", isCorrect: false },\n        { id: 1, text: \"Russia\", isCorrect: true },\n        { id: 2, text: \"Cuba\", isCorrect: true },\n        { id: 3, text: \"Mexico\", isCorrect: false },\n      ],\n    },\n  ];\n\n  const optionClicked = (isCorrect) => {\n    console.log(isCorrect);\n  }\n\n\n  return (\n    <div className=\"App\">\n    <h1>GEORGIA QUIZ</h1>      \n    \n    \n    <h2>CURRENT SCORE : 2</h2>\n\n    <div className='questioncard'>\n       <h2>QUESTION {currentQuestion + 1} OUT OF {questions.length} </h2>\n    <h3 className='questiontext'>{questions[currentQuestion].text}</h3>\n\n    <ul>\n       {questions[currentQuestion].options.map((option)=>{\n        return(\n          <li onClick={()=>optionClicked(option.isCorrect)} key={option.id}>{option.text}</li>\n        )\n       }\n      \n       )\n\n       }\n    </ul>\n    </div>\n   \n    <div className='finalresults'>\n      <h1>FINAL RESULTS</h1>\n      <h2>\n        1 out 5 correct-20%\n      </h2>\n    <button>RESTART</button>\n\n    </div>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}