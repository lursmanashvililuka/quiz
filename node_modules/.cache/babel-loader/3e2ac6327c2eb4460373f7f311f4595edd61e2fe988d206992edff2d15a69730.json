{"ast":null,"code":"var _jsxFileName = \"/home/luka/Desktop/quiz/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport picture from './images.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showFinalResults, setFinalResults] = useState();\n  const [currentPicture, setCurrentPicture] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const questions = [{\n    text: \"What is the capital of America?\",\n    Image: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      alt: \"anyway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this),\n    options: [{\n      id: 0,\n      text: \"New York City\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Boston\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"Santa Fe\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Washington DC\",\n      isCorrect: true\n    }]\n  }, {\n    text: \"What year was the Constitution of America written?\",\n    options: [{\n      id: 0,\n      text: \"1787\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"1776\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"1774\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"1826\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"Who was the second president of the US?\",\n    options: [{\n      id: 0,\n      text: \"John Adams\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"Paul Revere\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"Thomas Jefferson\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Benjamin Franklin\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"What is the largest state in the US?\",\n    options: [{\n      id: 0,\n      text: \"California\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Alaska\",\n      isCorrect: true\n    }, {\n      id: 2,\n      text: \"Texas\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"Montana\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"Which of the following countries DO NOT border the US?\",\n    options: [{\n      id: 0,\n      text: \"Canada\",\n      isCorrect: false\n    }, {\n      id: 1,\n      text: \"Russia\",\n      isCorrect: true\n    }, {\n      id: 2,\n      text: \"Cuba\",\n      isCorrect: true\n    }, {\n      id: 3,\n      text: \"Mexico\",\n      isCorrect: false\n    }]\n  }];\n  const optionClicked = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      setCurrentPicture(currentPicture + 1);\n    } else {\n      setFinalResults(true);\n    }\n  };\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setFinalResults(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CURRENT SCORE : \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showFinalResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finalresults\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FINAL RESULTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [score, \" OUT IF \", questions.length, \" CORRECT - (\", score / questions.length * 100, \"%) \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"RESTART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questioncard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"QUESTION \", currentQuestion + 1, \" OUT OF \", questions.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"questiontext\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questions[currentPicture].Image,\n        alt: \"noway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(option.isCorrect),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mxbgj8I3gv//msUd4EptSbtd/MM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","picture","App","showFinalResults","setFinalResults","currentPicture","setCurrentPicture","currentQuestion","setCurrentQuestion","score","setScore","questions","text","Image","options","id","isCorrect","optionClicked","length","restartGame","map","option"],"sources":["/home/luka/Desktop/quiz/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport picture from './images.png'\n\n\nfunction App() {\n  const [showFinalResults, setFinalResults] = useState();\n  const [currentPicture,setCurrentPicture] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const questions = [\n    {\n      text: \"What is the capital of America?\",\n      Image: <img src={picture} alt=\"anyway\"/>,\n      options: [\n        { id: 0, text: \"New York City\", isCorrect: false },\n        { id: 1, text: \"Boston\", isCorrect: false },\n        { id: 2, text: \"Santa Fe\", isCorrect: false },\n        { id: 3, text: \"Washington DC\", isCorrect: true },\n      ],\n    },\n    {\n      text: \"What year was the Constitution of America written?\",\n      options: [\n        { id: 0, text: \"1787\", isCorrect: true },\n        { id: 1, text: \"1776\", isCorrect: false },\n        { id: 2, text: \"1774\", isCorrect: false },\n        { id: 3, text: \"1826\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"Who was the second president of the US?\",\n      options: [\n        { id: 0, text: \"John Adams\", isCorrect: true },\n        { id: 1, text: \"Paul Revere\", isCorrect: false },\n        { id: 2, text: \"Thomas Jefferson\", isCorrect: false },\n        { id: 3, text: \"Benjamin Franklin\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"What is the largest state in the US?\",\n      options: [\n        { id: 0, text: \"California\", isCorrect: false },\n        { id: 1, text: \"Alaska\", isCorrect: true },\n        { id: 2, text: \"Texas\", isCorrect: false },\n        { id: 3, text: \"Montana\", isCorrect: false },\n      ],\n    },\n    {\n      text: \"Which of the following countries DO NOT border the US?\",\n      options: [\n        { id: 0, text: \"Canada\", isCorrect: false },\n        { id: 1, text: \"Russia\", isCorrect: true },\n        { id: 2, text: \"Cuba\", isCorrect: true },\n        { id: 3, text: \"Mexico\", isCorrect: false },\n      ],\n    },\n  ];\n\n  const optionClicked = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      setCurrentPicture(currentPicture +1);\n    } else {\n      setFinalResults(true);\n    }\n  };\n  const restartGame=()=>{\n    setScore(0);\n    setCurrentQuestion(0);\n    setFinalResults(0);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>USA QUIZ</h1>\n      \n\n      <h2>CURRENT SCORE : {score}</h2>\n\n      {showFinalResults ? (\n        <div className=\"finalresults\">\n          <h1>FINAL RESULTS</h1>\n          <h2>{score} OUT IF {questions.length} CORRECT - ({(score/questions.length)*100}%) </h2>\n          <button onClick={()=> restartGame()}>RESTART</button>\n        </div>\n      ) : (\n        <div className=\"questioncard\">\n          <h2>\n            QUESTION {currentQuestion + 1} OUT OF {questions.length}{\" \"}\n          </h2>\n          <h3 className=\"questiontext\">{questions[currentQuestion].text}</h3>\n          <img src={questions[currentPicture].Image} alt=\"noway\"/>\n          <ul>\n            {questions[currentQuestion].options.map((option) => {\n              return (\n                <li\n                  onClick={() => optionClicked(option.isCorrect)}\n                  key={option.id}\n                >\n                  {option.text}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}